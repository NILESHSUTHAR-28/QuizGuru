[
    {
        "question": "What is the primary key in a relational database?",
        "optionA": "A key used to uniquely identify each record in a table",
        "optionB": "A key used to establish relationships between tables",
        "optionC": "A key used to store large text data",
        "optionD": "A key used to index the table for faster search",
        "answer": "A key used to uniquely identify each record in a table"
    },
    {
        "question": "What is a foreign key in a relational database?",
        "optionA": "A key that points to a primary key in another table",
        "optionB": "A key used to uniquely identify records within a table",
        "optionC": "A key that helps in indexing the table",
        "optionD": "A key used for storing large data",
        "answer": "A key that points to a primary key in another table"
    },
    {
        "question": "What does normalization in a database refer to?",
        "optionA": "The process of reducing data redundancy",
        "optionB": "The process of adding indexes to tables",
        "optionC": "The process of storing data in a compressed format",
        "optionD": "The process of dividing data into partitions",
        "answer": "The process of reducing data redundancy"
    },
    {
        "question": "Which normal form ensures that there is no partial dependency?",
        "optionA": "First Normal Form (1NF)",
        "optionB": "Second Normal Form (2NF)",
        "optionC": "Third Normal Form (3NF)",
        "optionD": "Boyce-Codd Normal Form (BCNF)",
        "answer": "Second Normal Form (2NF)"
    },
    {
        "question": "What is a composite key?",
        "optionA": "A key that consists of multiple columns to uniquely identify a record",
        "optionB": "A key that is generated by the database automatically",
        "optionC": "A key that is used to store binary data",
        "optionD": "A key that is used to index the database",
        "answer": "A key that consists of multiple columns to uniquely identify a record"
    },
    {
        "question": "What is the main purpose of indexing in databases?",
        "optionA": "To speed up data retrieval operations",
        "optionB": "To reduce storage space",
        "optionC": "To encrypt sensitive data",
        "optionD": "To enforce referential integrity",
        "answer": "To speed up data retrieval operations"
    },
    {
        "question": "Which of the following is true about a 'many-to-many' relationship in a database?",
        "optionA": "It requires a junction table to implement",
        "optionB": "It can be implemented directly using foreign keys",
        "optionC": "It does not require any special handling in relational databases",
        "optionD": "It can only be implemented using a primary key",
        "answer": "It requires a junction table to implement"
    },
    {
        "question": "What is the role of a database schema?",
        "optionA": "It defines the structure and relationships of the database",
        "optionB": "It stores the data within the database",
        "optionC": "It provides a mechanism for querying data",
        "optionD": "It manages user access to the database",
        "answer": "It defines the structure and relationships of the database"
    },
    {
        "question": "What is the difference between 'DELETE' and 'TRUNCATE' in SQL?",
        "optionA": "DELETE removes rows one by one, while TRUNCATE removes all rows at once",
        "optionB": "DELETE is a DDL operation, while TRUNCATE is a DML operation",
        "optionC": "DELETE cannot be rolled back, while TRUNCATE can",
        "optionD": "DELETE removes the table structure, while TRUNCATE removes data only",
        "answer": "DELETE removes rows one by one, while TRUNCATE removes all rows at once"
    },
    {
        "question": "Which of the following is true about a 'view' in a database?",
        "optionA": "A view is a virtual table that displays data from one or more tables",
        "optionB": "A view is a physical table that stores data permanently",
        "optionC": "A view can only be used to display data from a single table",
        "optionD": "A view cannot be queried like a regular table",
        "answer": "A view is a virtual table that displays data from one or more tables"
    },
    {
        "question": "Which of the following is a valid SQL command to create a table?",
        "optionA": "CREATE DATABASE",
        "optionB": "CREATE TABLE",
        "optionC": "CREATE INDEX",
        "optionD": "CREATE VIEW",
        "answer": "CREATE TABLE"
    },
    {
        "question": "What does the term 'referential integrity' refer to in a database?",
        "optionA": "Ensuring that foreign keys in a table match primary keys in another table",
        "optionB": "Ensuring that all data in a table is unique",
        "optionC": "Ensuring that all columns in a table are indexed",
        "optionD": "Ensuring that the data is encrypted",
        "answer": "Ensuring that foreign keys in a table match primary keys in another table"
    },
    {
        "question": "What is a surrogate key?",
        "optionA": "A key that is generated by the database system for uniqueness",
        "optionB": "A key that is derived from existing columns in the table",
        "optionC": "A key that is used for indexing purposes",
        "optionD": "A key that is used for encryption",
        "answer": "A key that is generated by the database system for uniqueness"
    },
    {
        "question": "What does the term 'denormalization' refer to in a database?",
        "optionA": "The process of combining tables to reduce the number of joins",
        "optionB": "The process of splitting tables to reduce redundancy",
        "optionC": "The process of eliminating foreign keys from the database",
        "optionD": "The process of adding more indexes to a table",
        "answer": "The process of combining tables to reduce the number of joins"
    },
    {
        "question": "Which of the following is an example of a 'one-to-many' relationship?",
        "optionA": "A customer can have multiple orders, but each order belongs to only one customer",
        "optionB": "A student can enroll in multiple courses, and each course can have multiple students",
        "optionC": "A product can belong to multiple categories, and each category can contain multiple products",
        "optionD": "A company can have multiple employees, and each employee can belong to multiple companies",
        "answer": "A customer can have multiple orders, but each order belongs to only one customer"
    },
    {
        "question": "Which of the following is a characteristic of a relational database?",
        "optionA": "Data is stored in tables with rows and columns",
        "optionB": "Data is stored in a key-value format",
        "optionC": "Data is stored in a document-based format",
        "optionD": "Data is stored in a graph format",
        "answer": "Data is stored in tables with rows and columns"
    },
    {
        "question": "What is the purpose of the 'JOIN' operation in SQL?",
        "optionA": "To combine rows from two or more tables based on a related column",
        "optionB": "To delete data from a table",
        "optionC": "To update data in a table",
        "optionD": "To create new tables",
        "answer": "To combine rows from two or more tables based on a related column"
    },
    {
        "question": "What does the term 'ACID' stand for in database transactions?",
        "optionA": "Atomicity, Consistency, Isolation, Durability",
        "optionB": "Asynchronous, Consistency, Integrity, Durability",
        "optionC": "Atomicity, Compatibility, Isolation, Durability",
        "optionD": "Atomicity, Consistency, Integrity, Durability",
        "answer": "Atomicity, Consistency, Isolation, Durability"
    },
    {
        "question": "Which of the following is a disadvantage of normalization?",
        "optionA": "It increases data redundancy",
        "optionB": "It can lead to more complex queries",
        "optionC": "It makes data retrieval faster",
        "optionD": "It simplifies the database design",
        "answer": "It can lead to more complex queries"
    },
    {
        "question": "What is a database trigger?",
        "optionA": "A stored procedure that is automatically executed in response to certain events",
        "optionB": "A command used to create new records in a table",
        "optionC": "A type of index used to speed up queries",
        "optionD": "A mechanism to delete records from a table",
        "answer": "A stored procedure that is automatically executed in response to certain events"
    },
    {
        "question": "What is a 'candidate key' in a database?",
        "optionA": "A key that can uniquely identify a record in a table",
        "optionB": "A key that is used to index a table",
        "optionC": "A key that is used for encrypting data",
        "optionD": "A key that stores large data",
        "answer": "A key that can uniquely identify a record in a table"
    },
    {
        "question": "What is the difference between 'UNION' and 'UNION ALL' in SQL?",
        "optionA": "UNION removes duplicate rows, while UNION ALL includes duplicates",
        "optionB": "UNION is used to join tables, while UNION ALL is used to update data",
        "optionC": "UNION works with columns, while UNION ALL works with rows",
        "optionD": "UNION is used for sorting data, while UNION ALL is used for filtering data",
        "answer": "UNION removes duplicate rows, while UNION ALL includes duplicates"
    },
    {
        "question": "Which of the following is a benefit of using a database management system (DBMS)?",
        "optionA": "It provides a way to organize, store, and retrieve data efficiently",
        "optionB": "It increases the complexity of database design",
        "optionC": "It eliminates the need for data security",
        "optionD": "It requires no maintenance or backup",
        "answer": "It provides a way to organize, store, and retrieve data efficiently"
    },
    {
        "question": "What is a 'cascade delete' in a relational database?",
        "optionA": "Automatically deleting related records in other tables when a record is deleted",
        "optionB": "Automatically updating related records when a record is deleted",
        "optionC": "Automatically adding records to related tables",
        "optionD": "Automatically backing up data when a record is deleted",
        "answer": "Automatically deleting related records in other tables when a record is deleted"
    },
    {
        "question": "What is the purpose of a 'primary key' in a relational database?",
        "optionA": "To uniquely identify each record in a table",
        "optionB": "To reference a record in another table",
        "optionC": "To store large data types",
        "optionD": "To index the table for faster queries",
        "answer": "To uniquely identify each record in a table"
    },
    {
        "question": "Which SQL command is used to modify the structure of a table?",
        "optionA": "SELECT",
        "optionB": "UPDATE",
        "optionC": "ALTER",
        "optionD": "INSERT",
        "answer": "ALTER"
    },
    {
        "question": "What is a 'candidate key'?",
        "optionA": "A key that can uniquely identify a record in a table",
        "optionB": "A key used for indexing purposes",
        "optionC": "A key that can be used to encrypt data",
        "optionD": "A key that stores large data",
        "answer": "A key that can uniquely identify a record in a table"
    },
    {
        "question": "What is the role of 'indexes' in a database?",
        "optionA": "To speed up data retrieval operations",
        "optionB": "To reduce the storage space required for tables",
        "optionC": "To store large binary data",
        "optionD": "To enforce referential integrity",
        "answer": "To speed up data retrieval operations"
    },
    {
        "question": "Which of the following is true about 'denormalization'?",
        "optionA": "It is used to reduce the number of joins in a query",
        "optionB": "It is used to increase data redundancy",
        "optionC": "It splits large tables into smaller ones",
        "optionD": "It is used to enforce referential integrity",
        "answer": "It is used to reduce the number of joins in a query"
    },
    {
        "question": "Which normal form eliminates transitive dependency?",
        "optionA": "First Normal Form (1NF)",
        "optionB": "Second Normal Form (2NF)",
        "optionC": "Third Normal Form (3NF)",
        "optionD": "Boyce-Codd Normal Form (BCNF)",
        "answer": "Third Normal Form (3NF)"
    },
    {
        "question": "What is a 'junction table' in a many-to-many relationship?",
        "optionA": "A table that stores data about the relationship between two tables",
        "optionB": "A table that stores large binary data",
        "optionC": "A table used for indexing",
        "optionD": "A table that stores only primary keys",
        "answer": "A table that stores data about the relationship between two tables"
    },
    {
        "question": "What is 'referential integrity'?",
        "optionA": "Ensuring that foreign keys in a table match primary keys in another table",
        "optionB": "Ensuring that all data in a table is unique",
        "optionC": "Ensuring that all columns in a table are indexed",
        "optionD": "Ensuring that the data is encrypted",
        "answer": "Ensuring that foreign keys in a table match primary keys in another table"
    },
    {
        "question": "What does the 'JOIN' operation do in SQL?",
        "optionA": "Combines rows from two or more tables based on a related column",
        "optionB": "Deletes data from a table",
        "optionC": "Updates data in a table",
        "optionD": "Creates new tables",
        "answer": "Combines rows from two or more tables based on a related column"
    },
    {
        "question": "Which of the following is a valid SQL command to delete a table?",
        "optionA": "DROP TABLE",
        "optionB": "DELETE TABLE",
        "optionC": "REMOVE TABLE",
        "optionD": "CLEAR TABLE",
        "answer": "DROP TABLE"
    },
    {
        "question": "What does 'ACID' stand for in database transactions?",
        "optionA": "Atomicity, Consistency, Isolation, Durability",
        "optionB": "Asynchronous, Consistency, Integrity, Durability",
        "optionC": "Atomicity, Compatibility, Isolation, Durability",
        "optionD": "Atomicity, Consistency, Integrity, Durability",
        "answer": "Atomicity, Consistency, Isolation, Durability"
    },
    {
        "question": "What is a 'view' in a database?",
        "optionA": "A virtual table that displays data from one or more tables",
        "optionB": "A physical table that stores data permanently",
        "optionC": "A stored procedure that executes queries",
        "optionD": "A mechanism for enforcing referential integrity",
        "answer": "A virtual table that displays data from one or more tables"
    },
    {
        "question": "What is a 'stored procedure' in a database?",
        "optionA": "A precompiled SQL query that can be executed repeatedly",
        "optionB": "A command used to create a table",
        "optionC": "A mechanism to enforce referential integrity",
        "optionD": "A method for indexing data",
        "answer": "A precompiled SQL query that can be executed repeatedly"
    },
    {
        "question": "Which of the following is true about a 'one-to-one' relationship in a database?",
        "optionA": "Each record in one table is related to exactly one record in another table",
        "optionB": "Each record in one table can have multiple related records in another table",
        "optionC": "It requires a junction table to implement",
        "optionD": "It can only be implemented with a foreign key",
        "answer": "Each record in one table is related to exactly one record in another table"
    },
    {
        "question": "What is the purpose of a 'cascade update' in a relational database?",
        "optionA": "Automatically updating related records when a record is updated",
        "optionB": "Automatically deleting related records when a record is deleted",
        "optionC": "Automatically adding new records to related tables",
        "optionD": "Automatically backing up data when a record is updated",
        "answer": "Automatically updating related records when a record is updated"
    },
    {
        "question": "What is a 'null' value in a database?",
        "optionA": "A value that represents missing or undefined data",
        "optionB": "A value that represents an empty string",
        "optionC": "A value that represents zero",
        "optionD": "A value that represents a blank space",
        "answer": "A value that represents missing or undefined data"
    },
    {
        "question": "What is 'data integrity' in a database?",
        "optionA": "Ensuring that the data is accurate and consistent",
        "optionB": "Ensuring that data is encrypted",
        "optionC": "Ensuring that data is stored in a compressed format",
        "optionD": "Ensuring that data is indexed for faster retrieval",
        "answer": "Ensuring that the data is accurate and consistent"
    },
    {
        "question": "What is the purpose of a 'foreign key' in a relational database?",
        "optionA": "To establish a relationship between two tables",
        "optionB": "To uniquely identify each record in a table",
        "optionC": "To store large text data",
        "optionD": "To index the table for faster search",
        "answer": "To establish a relationship between two tables"
    },
    {
        "question": "What is the difference between 'INNER JOIN' and 'LEFT JOIN' in SQL?",
        "optionA": "INNER JOIN returns only matching rows, while LEFT JOIN returns all rows from the left table",
        "optionB": "INNER JOIN returns all rows from the left table, while LEFT JOIN returns only matching rows",
        "optionC": "INNER JOIN returns all rows from both tables, while LEFT JOIN returns only matching rows",
        "optionD": "INNER JOIN returns only unmatched rows, while LEFT JOIN returns all rows from the left table",
        "answer": "INNER JOIN returns only matching rows, while LEFT JOIN returns all rows from the left table"
    },
    {
        "question": "What is a 'transaction' in a database?",
        "optionA": "A set of SQL operations that are executed as a single unit",
        "optionB": "A command used to create a table",
        "optionC": "A method for indexing data",
        "optionD": "A query used to retrieve data from a table",
        "answer": "A set of SQL operations that are executed as a single unit"
    },
    {
        "question": "What is a 'data warehouse'?",
        "optionA": "A system used for storing and analyzing large volumes of historical data",
        "optionB": "A system used for storing real-time transactional data",
        "optionC": "A system used for storing multimedia data",
        "optionD": "A system used for indexing data",
        "answer": "A system used for storing and analyzing large volumes of historical data"
    },
    {
        "question": "What is 'sharding' in a database?",
        "optionA": "Dividing a large database into smaller, more manageable pieces",
        "optionB": "Encrypting sensitive data in a database",
        "optionC": "Creating multiple copies of a database for redundancy",
        "optionD": "Storing data in a distributed format",
        "answer": "Dividing a large database into smaller, more manageable pieces"
    },
    {
        "question": "Which of the following is an example of a 'many-to-many' relationship?",
        "optionA": "A student can enroll in multiple courses, and each course can have multiple students",
        "optionB": "A customer can have multiple orders, but each order belongs to only one customer",
        "optionC": "A product can belong to multiple categories, and each category can contain multiple products",
        "optionD": "A company can have multiple employees, and each employee can belong to multiple companies",
        "answer": "A student can enroll in multiple courses, and each course can have multiple students"
    },
    {
        "question": "What is a 'unique constraint' in a database?",
        "optionA": "A constraint that ensures no two rows in a table have the same value in a column",
        "optionB": "A constraint that ensures a column can accept null values",
        "optionC": "A constraint that enforces foreign key relationships",
        "optionD": "A constraint that automatically indexes a column",
        "answer": "A constraint that ensures no two rows in a table have the same value in a column"
    },
    {
        "question": "What is a 'check constraint' in SQL?",
        "optionA": "A constraint that limits the values a column can hold",
        "optionB": "A constraint that enforces a unique value for a column",
        "optionC": "A constraint that automatically updates the column value",
        "optionD": "A constraint that ensures a column is indexed",
        "answer": "A constraint that limits the values a column can hold"
    },
    {
        "question": "What is the difference between 'INNER JOIN' and 'OUTER JOIN' in SQL?",
        "optionA": "INNER JOIN returns only matching rows, while OUTER JOIN returns matching and non-matching rows",
        "optionB": "INNER JOIN returns all rows, while OUTER JOIN returns only matching rows",
        "optionC": "INNER JOIN is used for indexing, while OUTER JOIN is used for data retrieval",
        "optionD": "INNER JOIN is used for deleting data, while OUTER JOIN is used for inserting data",
        "answer": "INNER JOIN returns only matching rows, while OUTER JOIN returns matching and non-matching rows"
    },
    {
        "question": "What is the purpose of the 'GROUP BY' clause in SQL?",
        "optionA": "To group rows that have the same values in specified columns",
        "optionB": "To sort rows based on specific columns",
        "optionC": "To filter rows based on a condition",
        "optionD": "To combine rows from multiple tables",
        "answer": "To group rows that have the same values in specified columns"
    },
    {
        "question": "What is the purpose of the 'HAVING' clause in SQL?",
        "optionA": "To filter groups of rows based on a condition after the 'GROUP BY' clause",
        "optionB": "To filter rows based on a condition before the 'GROUP BY' clause",
        "optionC": "To combine rows from multiple tables",
        "optionD": "To sort rows based on a specific condition",
        "answer": "To filter groups of rows based on a condition after the 'GROUP BY' clause"
    }
]